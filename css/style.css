@import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');

:root,
::backdrop {
    /* Colors (palette)*/
    --col-black:     #0b132b;
    --col-dark-grey: #1c2541;
    --col-light-grey:#3a506b;
    --col-white:     #ecebe4;
    --col-x:         #009ddc;
    --col-o:         #efa00b;
    /* #6d9dc5,  ddd1c7*/

    /* Colors (background)*/
    --bg-col:                   var(--col-black);
    
    /* Colors (text/icons)*/
    --col-txt:                  var(--col-white);

    /* Colors (icons)*/


    /* Font family */
    --main-font: 'Century Gothic', sans-serif;

    /* Font sizes */
    --txt-fontsize:     4vmin;
    --txt-lineheight:   1;
    --header-h1-fontsize: 1rem;

    /* Text clamping: number of lines */

    /* Maximum width (including dashboard margin) */
    --max-width: min(1440px, 100%);

    /*Margins, gaps and paddings (+widths)*/
    --main-gap:          1.5rem;
    --main-lr-padding:   5vmin;
    --main-ud-padding:   3vmin;
    --header-ud-padding: 3vmin;

    /* Buttons */
    --button-fontsize:                  1rem;
    --button-bottom-border:             4px;
    --button-bottom-border-hover:       6px; /* this must be the largest*/
    --button-bottom-border-active:      2px;
    --button-radius:                    calc(var(--gameboard-radius) / 2);
    --button-padding:                   calc(var(--button-radius) / 1);
    --button-width:                     max(max-content,8em);
    --button-bottom-border-color:       var(--col-dark-grey);
    --button-bottom-border-color-alt:   var(--col-black);
    --button-bg-color:                  var(--col-light-grey);
    --button-bg-color-alt:              var(--col-dark-grey);
    --button-color:                     var(--col-white);
    --button-color-alt:                 var(--col-white);
    --button-height: calc(2 * var(--button-padding) + var(--button-fontsize) * var(--txt-lineheight)  
                     + var(--button-bottom-border-hover));

    /* Radius */


    /* Shadows */
    /* --outset-shadow: 2px 2px 8px var(--col-accent-medium);
    --outset-shadow-btn-active: 2px 2px 5px var(--col-accent-medium);
    --inset-shadow: 2px 2px 2px var(--col-accent-light) inset; */

    /* Animations on hover / active / ...*/
    /* --transition-time: 0.8s; */

    /* Other info */
    --gameboard-size: 3;

}

::backdrop {
    background-color: var(--col-black);
    opacity: 0.75;
}

html {
    background-color: var(--bg-col);
    color: var(--col-txt);
    font-family: var(--main-font), sans-serif;
    font-weight: 400;
    font-size: var(--txt-fontsize);
    line-height: var(--txt-lineheight);
}

*,
*:before,
*:after{
    font-family: inherit;
    font-size: inherit; /* 100% */
    line-height: inherit;
    color: inherit;
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    vertical-align: baseline;
    user-select: none;
}


body {
    margin: 0 auto;
    height: 100vh;  /*it is assumed the same for <html>*/
    height: 100dvh; /* if supported */
    
    /* if you want to allow scroll: */
    /* min-height: 100vh; */
    /* height: 100%; */
    
    width: 100%;
    /* or max-width -- this avoids horizontal scroll bars */
    
    touch-action: manipulation; /* disable double tap to zoom on some browsers*/
}

/*****************************************************/

/* || Generic */

body{
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* || Main and Header blocks */

header,
main{
    width: 100%;
    max-width: var(--max-width);
    margin: 0 auto;
}

header{
    padding: var(--header-ud-padding) var(--main-lr-padding);
}

main{
    padding: var(--main-ud-padding) var(--main-lr-padding);
    flex:1;
    height: 100%;

    display: flex;
    flex-direction: column;
}

/* || Generic icon mask: specify bg color, size and  mask-image*/

.icon-mask::before{
    --icon-len: 100%;
    display: inline-block;
    content:"";
    width: var(--icon-len); 
    height: var(--icon-len); 
    background-size: var(--icon-len) var(--icon-len);
    background-color: var(--icon-col);
    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
}

/* Generic Marker colors */
.x{
    --marker-col: var(--col-x);
}
.o{
    --marker-col: var(--col-o);
}

/* || Generic buttons */
button{
    border: none;
    outline: none;
    border-bottom: var(--button-bottom-border) solid var(--button-bottom-border-color);
    background-color: var(--button-bg-color);
    color: var(--button-color);
    border-radius: var(--button-radius);
    padding: var(--button-padding);
    width: var(--button-width);
    margin-top: calc(var(--button-bottom-border-hover) - var(--button-bottom-border));
    font-size: var(--button-fontsize);
}

button.alt{
    --button-bottom-border-color: var(--button-bottom-border-color-alt);
    --button-bg-color: var(--button-bg-color-alt);
    --button-color: var(--button-color-alt);
}

@media not all and (hover: none){
    /* when hover is supported */
    button:hover{
        border-bottom-width: var(--button-bottom-border-hover);
        margin-top: 0px; 
    }
 }

 button:active{
    border-bottom-width: var(--button-bottom-border-active);
    margin-top: calc(var(--button-bottom-border-hover) - var(--button-bottom-border-active));
 }


/* || Header */
h1{
    font-size: var(--header-h1-fontsize);
}

/* || Main - start new game VIEW*/
.start-new-game-div{
    flex:1;
    display: flex; /* becomes none in certain conditions (see below) */
    align-items: center;
    justify-content: center;
    width: 100%;
}
.start-new-game-div.game-on{
    display: none;
}

/* || Main - Playing View*/

.playing-div{
    flex:1;
    height: 100%;

    display: grid;
    justify-items: center;
    
    gap: 0px;
    grid-template-columns: 1fr;
    grid-template-rows: 0px minmax(0,1fr);
    grid-template-areas:
        "round-outcome"
        "gameboard";
}

.start-new-game-div:not(.game-on) + .playing-div{
    display: none;
}

.playing-div:has(.round-outcome-div.tie),
.playing-div:has(.round-outcome-div.win){
    grid-template-rows:min-content minmax(0,1fr);
    gap: var(--main-gap);
}

/* || Main - gameboard */
.gameboard-div{
    grid-area: gameboard;
    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
}

:root{
    --marker-col: transparent;

    --round-outcome-text-fontsize:  2rem;
    --round-outcome-subtext-fontsize: 0.8rem;

    --gameboard-gap:            2dvmin;
    --gameboard-gap-hover:      4dvmin;  
    --gameboard-padding:        var(--gameboard-gap);
    --gameboard-cell-padding:   10%;
    --round-outcome-gap:        1rem;
    --round-outcome-padding:    1rem;
    --round-outcome-btns-gap:   2rem;

    --gameboard-bg-col:             var(--col-light-grey);
    --gameboard-bg-col-hover:       transparent;
    --gameboard-cell-bg-col:        var(--col-dark-grey);
    --gameboard-cell-bg-col-hover:  var(--col-light-grey);
    --gameboard-cell-bg-col-active: var(--col-light-grey);   
    --round-outcome-bg-col:         var(--col-light-grey);

    --gameboard-cell-border-col:    var(--col-dark-grey);
    --gameboard-cell-border-col-hover: var(--col-light-grey);
    --gameboard-cell-border-col-active:var(--col-dark-grey);;

    --gameboard-cell-border:        0px;
    --gameboard-hover-cell-border:  5px;

    --gameboard-radius:             20px;
    --gameboard-cell-radius:        5px;
    --gameboard-hover-cell-radius:  10px;
    --gameboard-cell-radius-hover:  30px;
    --gameboard-cell-radius-active: 40px;
}

.gameboard{
    width: 100%; /* tofix height in landscape mode todo*/
    aspect-ratio: 1;
    background-color: var(--gameboard-bg-col);
    
    display: grid;
    grid-template-rows: repeat(var(--gameboard-size), 1fr);
    grid-template-columns: repeat(var(--gameboard-size), 1fr);

    gap: var(--gameboard-gap);
    padding: var(--gameboard-padding);                
    border-radius: var(--gameboard-radius);
}

.gameboard .cell{
    /* aspect-ratio: 1; */
    background-color: var(--gameboard-cell-bg-col);

    border: var(--gameboard-cell-border) solid var(--gameboard-cell-border-col);
    border-radius: var(--gameboard-cell-radius);

    display: flex;
    align-items: center;
    justify-content: center;

    padding: var(--gameboard-cell-padding);
}

/* Fix cells radius on vertex: you need to specify a specific class on the corner */
/* While you could use :first-child and :last-child for the TL and BR corners, */
/* you can't use CSS variables (--gameboard-size) within :nth-child() and ::nth-last-child() to get the remaining corners */
.gameboard .cell.cell-tl{
    border-top-left-radius: var(--gameboard-radius);
}
.gameboard .cell.cell-br{
    border-bottom-right-radius: var(--gameboard-radius);
}
.gameboard .cell.cell-tr{
    border-top-right-radius: var(--gameboard-radius);
}
.gameboard .cell.cell-bl{
    border-bottom-left-radius: var(--gameboard-radius);  
}

/* Mark in the cells (x and o) */
.gameboard .cell{
    --icon-len: 100%;
    --icon-col: var(--marker-col);
}

.gameboard .cell.x,
.gameboard .cell.o{
    pointer-events: none;
}


/* Hovering behaviour */
/* when hover is supported */
@media not all and (hover: none){
    .gameboard:hover{
        --gameboard-cell-border: var(--gameboard-hover-cell-border);  
        --gameboard-gap:         var(--gameboard-gap-hover);
        --gameboard-bg-col:      var(--gameboard-bg-col-hover);
        --gameboard-cell-radius: var(--gameboard-hover-cell-radius);
    }
    .gameboard .cell:hover{
        /* --gameboard-cell-radius: var(--gameboard-cell-radius-hover); */
        border-radius: var(--gameboard-cell-radius-hover);
        --gameboard-cell-bg-col:        var(--gameboard-cell-bg-col-hover);
        --gameboard-cell-border-col:    var(--gameboard-cell-border-col-hover);
    }
}

/* here replicate the same style as above, for devices not supporing hover */
/* active-specific styles are overwritten */
.gameboard:active{
    --gameboard-cell-border: var(--gameboard-hover-cell-border);  
    --gameboard-gap:         var(--gameboard-gap-hover);
    --gameboard-bg-col:      var(--gameboard-bg-col-hover);
    --gameboard-cell-radius: var(--gameboard-hover-cell-radius);
}
.gameboard .cell:active{
    /* --gameboard-cell-radius: var(--gameboard-cell-radius-active); */
    border-radius: var(--gameboard-cell-radius-active);
    --gameboard-cell-bg-col: var(--gameboard-cell-bg-col-active);
    --gameboard-cell-border-col: var(--gameboard-cell-border-col-active);
}


/* || Main - round outcome div */
.round-outcome-div{
    --round-outcome-height: calc(var(--round-outcome-text-fontsize) * var(--txt-lineheight) 
                            + var(--round-outcome-subtext-fontsize) * var(--txt-lineheight)
                            + 2 *  var(--round-outcome-padding) + 2 * var(--round-outcome-gap)
                            + var(--button-height));

    grid-area: round-outcome;
    width: 100%;
    
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;

    background-color: var(--round-outcome-bg-col);
    padding: var(--round-outcome-padding) 0px;
    height: var(--round-outcome-height);
    max-height: var(--round-outcome-height);

    display: none; /* becomes flex in certain conditions (see below) */
}

.round-outcome-div .round-outcome-text{
    font-variant: small-caps;
    font-size: var(--round-outcome-text-fontsize);
    flex: 2;
    display: none; /* becomes flex in certain conditions (see below) */
    align-items: center;
}
.round-outcome-div .round-outcome-subtext{
    font-size: var(--round-outcome-subtext-fontsize);
    flex: 1;
    display: none; /* becomes flex in certain conditions (see below) */
    align-items: flex-start;
}

.round-outcome-div:is(.win),
.round-outcome-div:is(.tie),
.round-outcome-div:is(.win) .round-outcome-text.win,
.round-outcome-div:is(.tie) .round-outcome-text.tie,
.round-outcome-div:is(.win):is(.extra) .round-outcome-subtext.extra{
    display: flex;   
}

.round-outcome-div .winner-player,
.winner-combo{
    font-variant: normal;
    color: var(--marker-col);
}
.winner-combo{
    font-weight: bold;
}

/* Round outcome buttons */
.round-outcome-div .outcome-next-actions{
    display: flex;
    gap: var(--round-outcome-btns-gap);
 }

/* https://www.svgrepo.com/svg/510273/tic-tac-toe */
.icon-mask.o::before{
    mask-image: url('data:image/svg+xml,<svg width="100%" height="100%" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="13 2 9 9"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path fill-rule="evenodd" clip-rule="evenodd" d="M17.5 4C16.1193 4 15 5.11929 15 6.5C15 7.88071 16.1193 9 17.5 9C18.8807 9 20 7.88071 20 6.5C20 5.11929 18.8807 4 17.5 4ZM13 6.5C13 4.01472 15.0147 2 17.5 2C19.9853 2 22 4.01472 22 6.5C22 8.98528 19.9853 11 17.5 11C15.0147 11 13 8.98528 13 6.5ZZ" fill="%23000"></path> </g></svg>');
}
.icon-mask.x::before{
    mask-image: url('data:image/svg+xml,<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="2 2 8.99 8.99"><g stroke-width="0"></g><g stroke-linecap="round" stroke-linejoin="round"></g><path fill-rule="evenodd" clip-rule="evenodd" d="M2.293 2.293a1 1 0 0 1 1.414 0L6.5 5.086l2.793-2.793a1 1 0 0 1 1.414 1.414L7.914 6.5l2.793 2.793a1 1 0 0 1-1.414 1.414L6.5 7.914l-2.793 2.793a1 1 0 0 1-1.414-1.414L5.086 6.5 2.293 3.707a1 1 0 0 1 0-1.414" fill="%23000"></path></svg>');
}

/* when hover is supported */
@media not all and (hover: none){

}

/* tablet or larger, or landscape (vs portrait)*/
@media only screen and (min-width: 768px), (orientation: landscape){

}




/* || Footer */
footer {
    --light-grey: rgb(210, 210, 210);
    --black: rgb(0, 0, 0);
    --ftr-fontsize: 12px;
    --ftr-font: 'Montserrat';
    --ftr-padding: 5px;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    background-color: var(--light-grey);
    color: var(--black);
    font-family: var(--ftr-font), sans-serif;
    font-size: var(--ftr-fontsize);
    font-weight: 400;
    line-height: 1.2;
    padding: var(--ftr-padding);
}

footer i {
    font-size: 1.3em;
}